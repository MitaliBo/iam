// Code generated by protoc-gen-go. DO NOT EDIT.
// source: filter.proto

package pb // import "openpitrix.io/iam/openpitrix/pkg/pb"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FieldValidator struct {
	// Uses a Golang RE2-syntax regex to match the field contents.
	Regex *string `protobuf:"bytes,1,opt,name=regex" json:"regex,omitempty"`
	// Field value of integer strictly greater than this value.
	IntGt *int64 `protobuf:"varint,2,opt,name=int_gt,json=intGt" json:"int_gt,omitempty"`
	// Field value of integer strictly smaller than this value.
	IntLt *int64 `protobuf:"varint,3,opt,name=int_lt,json=intLt" json:"int_lt,omitempty"`
	// Used for string fields, requires the string to be not empty (i.e different from "").
	StrNotEmpty *bool `protobuf:"varint,4,opt,name=str_not_empty,json=strNotEmpty" json:"str_not_empty,omitempty"`
	// Field value of length greater than this value.
	LenGt *int64 `protobuf:"varint,5,opt,name=len_gt,json=lenGt" json:"len_gt,omitempty"`
	// Field value of length smaller than this value.
	LenLt *int64 `protobuf:"varint,6,opt,name=len_lt,json=lenLt" json:"len_lt,omitempty"`
	// Field value of integer strictly equal this value.
	LenEq *int64 `protobuf:"varint,7,opt,name=len_eq,json=lenEq" json:"len_eq,omitempty"`
	// Field value must be in [enum_int]
	EnumInt []int64 `protobuf:"varint,8,rep,name=enum_int,json=enumInt" json:"enum_int,omitempty"`
	// Field value must be in [enum_string]
	EnumString []string `protobuf:"bytes,9,rep,name=enum_string,json=enumString" json:"enum_string,omitempty"`
	// Field time value before this value.
	TimeBefore *timestamp.Timestamp `protobuf:"bytes,10,opt,name=time_before,json=timeBefore" json:"time_before,omitempty"`
	// Field time value after this value.
	TimeAfter *timestamp.Timestamp `protobuf:"bytes,11,opt,name=time_after,json=timeAfter" json:"time_after,omitempty"`
	// Field value contains string elem.
	RepeatedContainsString []string `protobuf:"bytes,12,rep,name=repeated_contains_string,json=repeatedContainsString" json:"repeated_contains_string,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *FieldValidator) Reset()         { *m = FieldValidator{} }
func (m *FieldValidator) String() string { return proto.CompactTextString(m) }
func (*FieldValidator) ProtoMessage()    {}
func (*FieldValidator) Descriptor() ([]byte, []int) {
	return fileDescriptor_filter_a4a9d94ef3733088, []int{0}
}
func (m *FieldValidator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldValidator.Unmarshal(m, b)
}
func (m *FieldValidator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldValidator.Marshal(b, m, deterministic)
}
func (dst *FieldValidator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldValidator.Merge(dst, src)
}
func (m *FieldValidator) XXX_Size() int {
	return xxx_messageInfo_FieldValidator.Size(m)
}
func (m *FieldValidator) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldValidator.DiscardUnknown(m)
}

var xxx_messageInfo_FieldValidator proto.InternalMessageInfo

func (m *FieldValidator) GetRegex() string {
	if m != nil && m.Regex != nil {
		return *m.Regex
	}
	return ""
}

func (m *FieldValidator) GetIntGt() int64 {
	if m != nil && m.IntGt != nil {
		return *m.IntGt
	}
	return 0
}

func (m *FieldValidator) GetIntLt() int64 {
	if m != nil && m.IntLt != nil {
		return *m.IntLt
	}
	return 0
}

func (m *FieldValidator) GetStrNotEmpty() bool {
	if m != nil && m.StrNotEmpty != nil {
		return *m.StrNotEmpty
	}
	return false
}

func (m *FieldValidator) GetLenGt() int64 {
	if m != nil && m.LenGt != nil {
		return *m.LenGt
	}
	return 0
}

func (m *FieldValidator) GetLenLt() int64 {
	if m != nil && m.LenLt != nil {
		return *m.LenLt
	}
	return 0
}

func (m *FieldValidator) GetLenEq() int64 {
	if m != nil && m.LenEq != nil {
		return *m.LenEq
	}
	return 0
}

func (m *FieldValidator) GetEnumInt() []int64 {
	if m != nil {
		return m.EnumInt
	}
	return nil
}

func (m *FieldValidator) GetEnumString() []string {
	if m != nil {
		return m.EnumString
	}
	return nil
}

func (m *FieldValidator) GetTimeBefore() *timestamp.Timestamp {
	if m != nil {
		return m.TimeBefore
	}
	return nil
}

func (m *FieldValidator) GetTimeAfter() *timestamp.Timestamp {
	if m != nil {
		return m.TimeAfter
	}
	return nil
}

func (m *FieldValidator) GetRepeatedContainsString() []string {
	if m != nil {
		return m.RepeatedContainsString
	}
	return nil
}

func init() {
	proto.RegisterType((*FieldValidator)(nil), "openpitrix.iam.FieldValidator")
}

func init() { proto.RegisterFile("filter.proto", fileDescriptor_filter_a4a9d94ef3733088) }

var fileDescriptor_filter_a4a9d94ef3733088 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x4f, 0x4f, 0xe3, 0x30,
	0x14, 0xc4, 0x95, 0xcd, 0xf6, 0x4f, 0x9c, 0x6e, 0x0f, 0xd6, 0xee, 0xca, 0xdb, 0x4b, 0xa3, 0x1e,
	0x56, 0x39, 0x25, 0x12, 0x27, 0x50, 0x4f, 0x14, 0x15, 0x84, 0x54, 0x71, 0x08, 0x88, 0x03, 0x97,
	0xc8, 0xa1, 0x2f, 0x91, 0x85, 0x63, 0xbb, 0xce, 0xab, 0x54, 0x3e, 0x13, 0x5f, 0x12, 0x39, 0x21,
	0x81, 0x1b, 0xc7, 0xf7, 0x9b, 0x19, 0x6b, 0x34, 0x26, 0xb3, 0x52, 0x48, 0x04, 0x9b, 0x18, 0xab,
	0x51, 0xd3, 0xb9, 0x36, 0xa0, 0x8c, 0x40, 0x2b, 0x4e, 0x89, 0xe0, 0xf5, 0x62, 0x59, 0x69, 0x5d,
	0x49, 0x48, 0x5b, 0xb5, 0x38, 0x96, 0x29, 0x8a, 0x1a, 0x1a, 0xe4, 0xb5, 0xe9, 0x02, 0xab, 0x37,
	0x9f, 0xcc, 0xaf, 0x05, 0xc8, 0xfd, 0x23, 0x97, 0x62, 0xcf, 0x51, 0x5b, 0xfa, 0x9b, 0x8c, 0x2c,
	0x54, 0x70, 0x62, 0x5e, 0xe4, 0xc5, 0x41, 0xd6, 0x1d, 0xf4, 0x0f, 0x19, 0x0b, 0x85, 0x79, 0x85,
	0xec, 0x47, 0xe4, 0xc5, 0x7e, 0x36, 0x12, 0x0a, 0x6f, 0xb0, 0xc7, 0x12, 0x99, 0x3f, 0xe0, 0x1d,
	0xd2, 0x15, 0xf9, 0xd5, 0xa0, 0xcd, 0x95, 0xc6, 0x1c, 0x6a, 0x83, 0xaf, 0xec, 0x67, 0xe4, 0xc5,
	0xd3, 0x2c, 0x6c, 0xd0, 0xde, 0x69, 0xdc, 0x3a, 0xe4, 0xa2, 0x12, 0x94, 0x7b, 0x71, 0xd4, 0x45,
	0x25, 0xa8, 0xee, 0x45, 0x87, 0x25, 0xb2, 0xf1, 0x80, 0x77, 0x03, 0x86, 0x03, 0x9b, 0x0c, 0x78,
	0x7b, 0xa0, 0xff, 0xc8, 0x14, 0xd4, 0xb1, 0xce, 0x85, 0x42, 0x36, 0x8d, 0xfc, 0xd8, 0xcf, 0x26,
	0xee, 0xbe, 0x55, 0x48, 0x97, 0x24, 0x6c, 0xa5, 0x06, 0xad, 0x50, 0x15, 0x0b, 0x22, 0x3f, 0x0e,
	0x32, 0xe2, 0xd0, 0x7d, 0x4b, 0xe8, 0x9a, 0x84, 0x6e, 0x8e, 0xbc, 0x80, 0x52, 0x5b, 0x60, 0x24,
	0xf2, 0xe2, 0xf0, 0x6c, 0x91, 0x74, 0x93, 0x25, 0xfd, 0x64, 0xc9, 0x43, 0x3f, 0x59, 0x46, 0x9c,
	0x7d, 0xd3, 0xba, 0xe9, 0x05, 0x69, 0xaf, 0x9c, 0x97, 0x08, 0x96, 0x85, 0xdf, 0x66, 0x03, 0xe7,
	0xbe, 0x74, 0x66, 0x7a, 0x4e, 0x98, 0x05, 0x03, 0x1c, 0x61, 0x9f, 0x3f, 0x6b, 0x85, 0x5c, 0xa8,
	0xa6, 0x6f, 0x39, 0x6b, 0x5b, 0xfe, 0xed, 0xf5, 0xab, 0x0f, 0xb9, 0x6b, 0xbc, 0x89, 0x9f, 0xfe,
	0x7f, 0xfd, 0x60, 0x9d, 0x0a, 0x5e, 0xa7, 0x9f, 0x24, 0x35, 0x2f, 0x55, 0x6a, 0x8a, 0xb5, 0x29,
	0xde, 0x03, 0x00, 0x00, 0xff, 0xff, 0x50, 0x19, 0x3e, 0x4b, 0x17, 0x02, 0x00, 0x00,
}
