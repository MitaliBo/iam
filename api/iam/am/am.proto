// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto3";

package iam.am;

option go_package = "openpitrix.io/iam/pkg/pb/am;pbam";

// ----------------------------------------------------------------------------
// The Pattern Syntax
// ----------------------------------------------------------------------------

// The pattern syntax is:
//
//	pattern:
//	{ term }
//	term:
//		'*'         matches any sequence of non-Separator characters
//		'**'        matches any sequence of characters, include path separators.
//		'?'         matches any single non-Separator character
//		'[' [ '^' ] { character-range } ']'
//		            character class (must be non-empty)
//		c           matches character c (c != '*', '?', '\\', '[')
//		'\\' c      matches character c
//
//	character-range:
//		c           matches character c (c != '\\', '-', ']')
//		'\\' c      matches character c
//		lo '-' hi   matches character c for lo <= c <= hi
//
// See https://godoc.org/path/filepath#Match
// See https://github.com/bmatcuk/doublestar
//
// Examples: https://golang.org/src/path/filepath/match_test.go

// ----------------------------------------------------------------------------
// basic type
// ----------------------------------------------------------------------------

message Action {
	// 1. check any of role can do the action
	// 2. mappng xid to the roles, then check any role can do the action

	repeated string role_name = 1;
	repeated string xid = 2; // user_id/group_id/*_id

	string verb = 3; // op1/op2/...
	string path = 4; // url
}

message Rule {
	string path_pattern = 1;          // See Pattern Syntax
	repeated string verb_pattern = 2; // '*' is all
}

message Role {
	string role_name = 1; // primary key, read only
	repeated Rule rule = 2;
}
message RoleList {
	repeated Role value = 1;
}

message RoleBinding {
	string role_name = 1;
	string xid = 2;
}
message RoleBindingList {
	repeated RoleBinding value = 1;
}

// ----------------------------------------------------------------------------
// service api
// ----------------------------------------------------------------------------

service AccessManager {
	rpc CreateRole(Role) returns (Role);
	rpc ModifyRole(Role) returns (Role);
	rpc DeleteRoleByName(String) returns (Bool);

	rpc GetRoleByRoleName(String) returns (Role);
	rpc GetRoleByXidList(XidList) returns (RoleList);
	rpc ListRoles(RoleNameRegexp) returns (RoleList);

	rpc CreateRoleBinding(RoleBindingList) returns (Bool);
	rpc DeleteRoleBinding(RoleBindingList) returns (Bool);
	rpc DeleteAllRoleBindings(XidList) returns (Bool);

	// check any of xid or role_name can do the action
	rpc CanDo(Action) returns (Bool);
}

// ----------------------------------------------------------------------------
// service api type
// ----------------------------------------------------------------------------

message Bool {
	bool value = 1;
}
message String {
	string value = 1;
}

message Xid {
	string value = 1;
}
message XidList {
	repeated string value = 1;
}

message RoleNameRegexp {
	// Use RE2 syntax
	// See https://github.com/google/re2/wiki/Syntax
	string value = 1;
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
