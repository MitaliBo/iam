// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto3";

package openpitrix.iam.am;

option go_package = "openpitrix.io/iam/pkg/pb/am;pbam";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

// ----------------------------------------------------------------------------
// service api
// ----------------------------------------------------------------------------

service AccessManager {
	rpc GetVersion(Empty) returns (String) {
		option (google.api.http) = {
			get: "/v1/am/version"
		};
	}

	rpc CanDo(CanDoRequest) returns (CanDoResponse) {
		option (google.api.http) = {
			post: "/v1/am/cando"
			body: "*"
		};
	}

	rpc CreateRole(Role) returns (Role) {
		option (google.api.http) = {
			post: "/v1/am/roles"
			body: "*"
		};
	}
	rpc DeleteRoles(RoleIdList) returns (Empty) {
		option (google.api.http) = {
			delete: "/v1/am/roles"
			body: "*"
		};
	}
	rpc ModifyRole(Role) returns (Role) {
		option (google.api.http) = {
			patch: "/v1/am/roles"
			body: "*"
		};
	}
	rpc GetRole(RoleId) returns (Role) {
		option (google.api.http) = {
			get: "/v1/am/roles/{role_id}"
		};
	}
	rpc DescribeRoles(DescribeRolesRequest) returns (RoleList) {
		option (google.api.http) = {
			get: "/v1/am/roles"
		};
	}

	rpc GetUserWithRole(UserId) returns (UserWithRole) {
		option (google.api.http) = {
			get: "/v1/am/users/{user_id}"
		};
	}
	rpc DescribeUsersWithRole(DescribeUsersWithRoleRequest) returns (DescribeUsersWithRoleResponse) {
		option (google.api.http) = {
			get: "/v1/am/users"
		};
	}

	rpc GetRoleModule(RoleId) returns (RoleModule) {
		option (google.api.http) = {
			get: "/v1/am/roles:module"
		};
	}
	rpc ModifyRoleModule(RoleModule) returns (RoleModule) {
		option (google.api.http) = {
			patch: "/v1/am/roles:module"
			body: "*"
		};
	}

	rpc BindUserRole(BindUserRoleRequest) returns (Empty) {
		option (google.api.http) = {
			post: "/v1/am/user:role"
			body: "*"
		};
	}
	rpc UnbindUserRole(UnbindUserRoleRequest) returns (Empty) {
		option (google.api.http) = {
			delete: "/v1/am/user:role"
			body: "*"
		};
	}
}

// ----------------------------------------------------------------------------
// common types
// ----------------------------------------------------------------------------

message Empty {
	//
}

message String {
	string value = 1;
}

message UserId {
	string user_id = 1;
}

// ----------------------------------------------------------------------------
// CanDo
// ----------------------------------------------------------------------------

message CanDoRequest {
	string user_id = 1;
	string url = 2;
	string url_method = 3;
}
message CanDoResponse {
	string user_id = 1;
	string access_path = 2;
	string owner_path = 3;
}

// ----------------------------------------------------------------------------
// Role
// ----------------------------------------------------------------------------

message RoleId {
	string role_id = 1;
}
message RoleIdList {
	repeated string role_id = 1;
}
message Role {
	string role_id = 1;
	string role_name = 2;   // enable modify
	string description = 3; // enable modify
	string portal = 4;      // enable modify
	string owner = 5;
	string owner_path = 6;
	string Status = 7;

	google.protobuf.Timestamp create_time = 8;
	google.protobuf.Timestamp update_time = 9;
	google.protobuf.Timestamp status_time = 10;

	repeated string user_id = 11;
}
message RoleList {
	repeated Role value = 1;
}

message CreateRoleRequest {
	Role role = 1;
}
message CreateRoleResponse {
	string role_id = 1;
}

message DeleteRolesRequest {
	repeated string role_id = 1;
}
message DeleteRolesResponse {
	repeated string role_id = 1;
}

message DescribeRolesRequest {
	repeated string role_id = 1;
	repeated string role_name = 2;
	repeated string portal = 3;
	repeated string user_id = 4;
}

// ----------------------------------------------------------------------------
// RoleModule
// ----------------------------------------------------------------------------

message ModuleFeatureActionBundle {
	string role_id = 1;
	string role_name = 2;
	string portal = 3;

	string module_id = 4;
	string module_name = 5;
	string data_level = 6;
	string owner = 7;

	string feature_id = 8;
	string feature_name = 9;

	string action_id = 10;
	string action_name = 11;
	bool action_enabled = 12;

	string api_id = 13;
	string api_method = 14;
	string api_description = 15;

	string url = 16;
	string url_method = 17;
}

message ModuleFeature {
	string feature_id = 1;
	string feature_name = 2;
	repeated ModuleFeatureActionBundle action = 3;
	repeated string checked_action_id = 4;
}

message RoleModuleElem {
	string module_id = 1;
	string module_name = 2;
	repeated ModuleFeature feature = 3;
	string owner = 4;
	string data_level = 5;
	bool is_check_all = 6;
}

message RoleModule {
	string role_id = 1;
	repeated RoleModuleElem module = 2;
}

// ----------------------------------------------------------------------------
// User
// ----------------------------------------------------------------------------

// keep same as openpitrix.iam.im.User
message UserWithRole {
	string user_id = 1; // regexp: ^[a-z0-9_-]{2,32}$, primary key
	string username = 2;
	string email = 3;
	string phone_number = 4;
	string description = 5;
	string password = 6; // only for create user
	string status = 7;
	map<string,string> extra = 8;

	google.protobuf.Timestamp create_time = 9;  // read only
	google.protobuf.Timestamp update_time = 10; // read only
	google.protobuf.Timestamp status_time = 11; // read only

	repeated string group_id = 13;
	repeated Role role = 12;
}

message DescribeUsersWithRoleRequest {
	repeated string role_id = 1;

	repeated string group_id = 2;
	repeated string user_id = 3;
	repeated string username = 4;
	repeated string email = 5;
	repeated string phone_number = 6;
	repeated string status = 7;

	int32 limit = 8;
	int32 offset = 9;
	string search_word = 10;
	string sort_key = 11;
	bool reverse = 12;
}

message DescribeUsersWithRoleResponse {
	repeated UserWithRole user = 1;
	int32 total = 2;
}

// ----------------------------------------------------------------------------
// Binding
// ----------------------------------------------------------------------------

message BindUserRoleRequest {
	repeated string user_id = 1;
	repeated string role_id = 2;
}

message UnbindUserRoleRequest {
	repeated string user_id = 1;
	repeated string role_id = 2;
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
