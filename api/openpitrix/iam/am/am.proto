// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto3";

package openpitrix.iam.am;

option go_package = "openpitrix.io/iam/pkg/pb/am;pbam";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

// ----------------------------------------------------------------------------
// service api
// ----------------------------------------------------------------------------

service AccessManager {
	rpc GetVersion(Empty) returns (String) {
		option (google.api.http) = {
			get: "/v1/iam/version"
		};
	}

	rpc DescribeActions(Empty) returns (DescribeActionsResponse) {
		option (google.api.http) = {
			get: "/v1/iam/actions"
		};
	}

	rpc CanDo(CanDoActionRequest) returns (CanDoActionResponse) {
		option (google.api.http) = {
			post: "/v1/iam/cando"
			body: "*"
		};
	}
	rpc GetOwnerPath(GetOwnerPathRequest) returns (GetOwnerPathResponse) {
		option (google.api.http) = {
			get: "/v1/iam/owner_path/{user_id}"
		};
	}
	rpc GetAccessPath(GetAccessPathRequest) returns (GetAccessPathResponse) {
		option (google.api.http) = {
			get: "/v1/iam/access_path/{user_id}"
		};
	}

	rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse) {
		option (google.api.http) = {
			post: "/v1/iam/roles"
			body: "*"
		};
	}
	rpc DeleteRoles(DeleteRolesRequest) returns (DeleteRolesResponse) {
		option (google.api.http) = {
			delete: "/v1/iam/roles"
			body: "*"
		};
	}
	rpc ModifyRole(ModifyRoleRequest) returns (ModifyRoleResponse) {
		option (google.api.http) = {
			patch: "/v1/iam/roles"
			body: "*"
		};
	}
	rpc DescribeRoles(DescribeRolesRequest) returns (DescribeRolesResponse) {
		option (google.api.http) = {
			get: "/v1/iam/roles"
		};
	}
	rpc DescribeRolesVerbose(DescribeRolesVerboseRequest) returns (DescribeRolesVerboseResponse) {
		option (google.api.http) = {
			get: "/v1/iam/roles/verbose"
		};
	}

	rpc BindRoleModule(BindRoleModuleRequest) returns (BindRoleModuleResponse) {
		option (google.api.http) = {
			post: "/v1/iam/role_module"
			body: "*"
		};
	}
	rpc UnBindRoleModule(UnBindRoleModuleRequest) returns (UnBindRoleModuleResponse) {
		option (google.api.http) = {
			delete: "/v1/iam/user_role"
			body: "*"
		};
	}

	rpc BindUserRole(BindUserRoleRequest) returns (BindUserRoleResponse) {
		option (google.api.http) = {
			post: "/v1/iam/user_role"
			body: "*"
		};
	}
	rpc UnBindUserRole(UnBindUserRoleRequest) returns (UnBindUserRoleResponse) {
		option (google.api.http) = {
			delete: "/v1/iam/user_role"
			body: "*"
		};
	}
}

// ----------------------------------------------------------------------------
// common types
// ----------------------------------------------------------------------------

message Empty {
	//
}

message String {
	string value = 1;
}

// ----------------------------------------------------------------------------
// Action
// ----------------------------------------------------------------------------

message Action {
	string action_id = 1;
	string action_name = 2;
	string method = 3;
	string description = 4;
	string feature_id = 5;
	string feature_name = 6;
	string module_id = 7;
	string module_name = 8;
}

message DescribeActionsRequest {
	int32 offset = 1;
	int32 limit = 2;
}
message DescribeActionsResponse {
	repeated Action action_set = 1;
	int32 total_count = 2;
}

// ----------------------------------------------------------------------------
// CanDoAction
// ----------------------------------------------------------------------------

message CanDoActionRequest {
	string user_id = 1;
	string method = 2;
	string access_path = 3;
}
message CanDoActionResponse {
	string user_id = 1;
	bool ok = 2;
}

message GetOwnerPathRequest {
	string user_id = 1;
	string method = 2;
}
message GetOwnerPathResponse {
	string user_id = 1;
	string method = 2;
}

message GetAccessPathRequest {
	string user_id = 1;
	string method = 2;
}
message GetAccessPathResponse {
	string user_id = 1;
	string path = 2;
}

// ----------------------------------------------------------------------------
// Role
// ----------------------------------------------------------------------------

message Role {
	string role_id = 1;
	string role_name = 2;
	string description = 3;
	string portal = 4;
	string owner = 5;
	string owner_path = 6;

	google.protobuf.Timestamp create_time = 7;
	google.protobuf.Timestamp update_time = 8;
}

message CreateRoleRequest {
	string user_id = 1;
	Role value = 2;
}
message CreateRoleResponse {
	string user_id = 1;
	string role_id = 2;
}

message DeleteRolesRequest {
	string user_id = 1;
	repeated string role_id = 2;
}
message DeleteRolesResponse {
	repeated string role_id = 2;
}

message ModifyRoleRequest {
	string user_id = 1;
	Role value = 2;
}
message ModifyRoleResponse {
	string role_id = 2;
}


message DescribeRolesRequest {
	string user_id = 1;

	map<string,string> key_word = 2; // x.key == word
	string search_word = 3;          // x.[...] LIKE search_word

	int32 offset = 4;
	int32 limit = 5;
}
message DescribeRolesResponse {
	string user_id = 1;
	repeated Role role_set = 2;
	int32 total_count = 3;
}

message DescribeRolesVerboseRequest {
	//
}
message DescribeRolesVerboseResponse {
	//
}

// ----------------------------------------------------------------------------
// Binding
// ----------------------------------------------------------------------------

message RoleModuleBinding {
	string binding_id = 1;
	string role_id = 2;
	string module_id = 3;
	string data_level = 4;
	string enabled_actions = 5; // 001:createapp, 002:modifyapp
	string owner = 8;

	google.protobuf.Timestamp create_time = 6;
	google.protobuf.Timestamp update_time = 7;
}

message BindRoleModuleRequest {
	string user_id = 1;
	string role_id = 2;
	string module_id = 3;
}
message BindRoleModuleResponse {
	//
}

message UnBindRoleModuleRequest {
	string user_id = 1;
	string role_id = 2;
	string module_id = 3;
}
message UnBindRoleModuleResponse {
	//
}

message BindUserRoleRequest {
	string user_id = 1;
	string role_id = 2;
}
message BindUserRoleResponse {
	//
}

message UnBindUserRoleRequest {
	string user_id = 1;
	string role_id = 2;
}
message UnBindUserRoleResponse {
	//
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
